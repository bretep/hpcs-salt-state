input {
    redis {
        host => "{{ redis_host }}"
        type => "redis-input"
        {% if redis_password is defined %}password => "{{ redis_password }}"{% endif %}

        # these settings should match the output of the agent
        data_type => "list"
        key => "logstash"

        # We use json_event here since the sender is a logstash agent
        format => "json_event"
    }

    redis {
        host => "{{ redis_host }}"
        type => "dbaas"
        {% if redis_password is defined %}password => "{{ redis_password }}"{% endif %}

        # these settings should match the output of the agent
        data_type => "list"
        key => "dbaas-logstash"

        # We use json_event here since the sender is a logstash agent
        format => "json_event"
    }

    redis {
        host => "{{ redis_host }}"
        type => "dnsaas"
        {% if redis_password is defined %}password => "{{ redis_password }}"{% endif %}

        # these settings should match the output of the agent
        data_type => "list"
        key => "dnsaas-logstash"

        # We use json_event here since the sender is a logstash agent
        format => "json_event"
    }

    redis {
        host => "{{ redis_host }}"
        type => "lbaas"
        {% if redis_password is defined %}password => "{{ redis_password }}"{% endif %}

        # these settings should match the output of the agent
        data_type => "list"
        key => "lbaas-logstash"

        # We use json_event here since the sender is a logstash agent
        format => "json_event"
    }
}

output {
    elasticsearch_http {
        host => "{{ es_host }}"
        flush_size => {{ es_flushsize }}
    }
}
